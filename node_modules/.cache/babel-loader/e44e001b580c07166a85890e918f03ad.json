{"ast":null,"code":"var _jsxFileName = \"/Users/umairmustafa/GitHub/stopWatch-react/src/components/intervals.jsx\";\nimport React, { Component } from 'react';\nimport '../clock.css';\nimport '../bootstrap/css/bootstrap.css';\n\nclass Intervals extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      countSec: 0,\n      countMin: 0,\n      countMSec: 0,\n      lapseCount: 0,\n      flag: 0,\n      lap: 1\n    };\n\n    this.startTimeInterval = () => {\n      if (this.state.flag === 0) {\n        //setting state of flag.\n        this.setState({\n          flag: 1\n        }); //creating interval for sec and minutes.\n\n        let intervalId = setInterval(this.timeInterval, 10); //setting state for interval id.\n\n        this.setState({\n          interval: intervalId\n        });\n      }\n    };\n\n    this.timeInterval = () => {\n      //setting state for mili second.\n      this.setState({\n        countMSec: this.state.countMSec + 1\n      });\n\n      if (this.state.countMSec === 100) {\n        //setting state for mili second.\n        this.setState({\n          countMSec: 0\n        });\n\n        if (this.state.countMSec < 10) {\n          //displaying mili sec on browser.\n          document.getElementById(\"mSecCounter\").innerHTML = \"0\" + this.state.countMSec;\n        } else {\n          //displaying mili sec on browser.\n          document.getElementById(\"mSecCounter\").innerHTML = this.state.countMSec;\n        } //setting state for sec.\n\n\n        this.setState({\n          countSec: this.state.countSec + 1\n        });\n      } else {\n        if (this.state.countMSec < 10) {\n          //displaying mili sec on browser.\n          document.getElementById(\"mSecCounter\").innerHTML = \"0\" + this.state.countMSec;\n        } else {\n          //displaying mili sec on browser.\n          document.getElementById(\"mSecCounter\").innerHTML = this.state.countMSec;\n        }\n      }\n\n      if (this.state.countSec === 60) {\n        //setting state for sec.\n        this.setState({\n          countSec: 0\n        }); //setting state for min.\n\n        this.setState({\n          countMin: this.state.countMin + 1\n        });\n\n        if (this.state.countMin < 10) {\n          //displaying minutes on browser.\n          document.getElementById(\"minCounter\").innerHTML = \"0\" + this.state.countMin;\n        } else {\n          //displaying minutes on browser.\n          document.getElementById(\"minCounter\").innerHTML = this.state.countMin;\n        }\n      } else {\n        if (this.state.countSec < 10) //displaying sec on browser.\n          document.getElementById(\"secCounter\").innerHTML = \"0\" + this.state.countSec;else //displaying sec on browser.\n          document.getElementById(\"secCounter\").innerHTML = this.state.countSec;\n      }\n    };\n\n    this.timeIntervalforMiliSecond = () => {};\n\n    this.lapInfo = () => {\n      //setting state for lapse.\n      this.setState({\n        lap: this.state.lap + 1\n      }); //displaying lapse on browser.\n\n      document.getElementById(\"lapseInfo\").innerHTML += \"lap\" + this.state.lap + \": \" + this.state.countMin + \":\" + this.state.countSec + \":\" + +this.state.countMSec + \"<br>\";\n    };\n\n    this.stopTimeInterval = () => {\n      if (this.state.flag === 1) {\n        //clearing interval\n        clearInterval(this.state.interval); //setting state for flag.\n\n        this.setState({\n          flag: 0\n        }); //setting state for lapse.\n\n        this.setState({\n          lap: this.state.lap + 1\n        }); //displaying lapse on browser.\n\n        document.getElementById(\"lapseInfo\").innerHTML += \"lap\" + this.state.lap + \": \" + this.state.countMin + \":\" + this.state.countSec + \":\" + +this.state.countMSec + \"<br>\";\n      }\n    };\n\n    this.clearLap = () => {\n      //Clearign lapse lapse on browser.\n      document.getElementById(\"lapseInfo\").innerHTML = \"\"; //setting state lapse.\n\n      this.setState({\n        lap: 1\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"midContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.startTimeInterval,\n      id: \"hide1\",\n      className: \"btn btn-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"button\", {\n      onClick: this.stopTimeInterval,\n      id: \"hide2\",\n      className: \"btn btn-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Stop\"), React.createElement(\"button\", {\n      onClick: this.lapInfo,\n      className: \"btn btn-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"lap\"), React.createElement(\"button\", {\n      onClick: this.clearLap,\n      className: \"btn btn-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Clear lap\"), React.createElement(\"button\", {\n      onClick: this.reset,\n      className: \"btn btn-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Reset\"));\n  } //Start time interval Function.\n\n\n}\n\nexport default Intervals;","map":{"version":3,"sources":["/Users/umairmustafa/GitHub/stopWatch-react/src/components/intervals.jsx"],"names":["React","Component","Intervals","state","countSec","countMin","countMSec","lapseCount","flag","lap","startTimeInterval","setState","intervalId","setInterval","timeInterval","interval","document","getElementById","innerHTML","timeIntervalforMiliSecond","lapInfo","stopTimeInterval","clearInterval","clearLap","render","reset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../clock.css';\nimport '../bootstrap/css/bootstrap.css';\n\nclass Intervals extends Component{\n      state = {\n        countSec: 0,\n        countMin: 0,    \n        countMSec: 0,\n        lapseCount: 0,\n        flag: 0,\n        lap: 1\n   };\n    render(){\n        return(\n            <div className = \"midContainer\">\n                <button onClick ={this.startTimeInterval} id = \"hide1\" className = \"btn btn-primary m-2\">Start</button>\n                <button onClick ={this.stopTimeInterval} id = \"hide2\" className = \"btn btn-primary m-2\">Stop</button>\n                <button onClick ={this.lapInfo} className = \"btn btn-primary m-2\">lap</button>\n                <button onClick ={this.clearLap} className = \"btn btn-primary m-2\">Clear lap</button>\n                <button onClick ={this.reset} className = \"btn btn-primary m-2\">Reset</button>\n            </div>\n        );\n    }\n    \n//Start time interval Function.\nstartTimeInterval = () => {\n    if(this.state.flag === 0){\n        //setting state of flag.\n        this.setState({flag: 1})\n        //creating interval for sec and minutes.\n        let intervalId  = setInterval(this.timeInterval, 10); \n        //setting state for interval id.\n        this.setState({interval: intervalId});\n    }\n}\n//timeInterval function.\ntimeInterval = () => {\n    //setting state for mili second.\n    this.setState({countMSec: this.state.countMSec + 1});  \n    if(this.state.countMSec === 100){\n        //setting state for mili second.\n        this.setState({countMSec: 0}); \n        if(this.state.countMSec < 10){\n            //displaying mili sec on browser.\n            document.getElementById(\"mSecCounter\").innerHTML = \"0\" + this.state.countMSec;\n        }else{\n            //displaying mili sec on browser.\n            document.getElementById(\"mSecCounter\").innerHTML = this.state.countMSec;\n        }\n         //setting state for sec.\n         this.setState({countSec: this.state.countSec + 1});  \n    }\n    else{\n        if(this.state.countMSec < 10){\n            //displaying mili sec on browser.\n            document.getElementById(\"mSecCounter\").innerHTML = \"0\" + this.state.countMSec;\n        }else{\n            //displaying mili sec on browser.\n            document.getElementById(\"mSecCounter\").innerHTML = this.state.countMSec;\n        }\n    }\n    if(this.state.countSec === 60){\n        //setting state for sec.\n        this.setState({countSec: 0});\n        //setting state for min.\n        this.setState({countMin: this.state.countMin + 1});\n        if(this.state.countMin < 10){\n            //displaying minutes on browser.\n            document.getElementById(\"minCounter\").innerHTML = \"0\" + this.state.countMin;\n        }\n        else{\n                //displaying minutes on browser.\n                document.getElementById(\"minCounter\").innerHTML = this.state.countMin;\n        }\n    }\n    else{\n        if(this.state.countSec < 10)\n             //displaying sec on browser.\n             document.getElementById(\"secCounter\").innerHTML = \"0\" + this.state.countSec;\n         else\n             //displaying sec on browser.\n             document.getElementById(\"secCounter\").innerHTML = this.state.countSec;\n    }\n}\n//clear timeIntervalForMiliSecond function.\ntimeIntervalforMiliSecond = () => {\n    \n}\n\n//lapInfo funtion.\nlapInfo = () => {\n    //setting state for lapse.\n    this.setState({lap: this.state.lap + 1});\n    //displaying lapse on browser.\n    document.getElementById(\"lapseInfo\").innerHTML += \"lap\" + this.state.lap  + \": \" + this.state.countMin + \":\" + this.state.countSec + \":\" + + this.state.countMSec + \"<br>\"; \n}\n//clear stopTimeInterval funtion.\nstopTimeInterval = () => {\n    if(this.state.flag  === 1){\n            //clearing interval\n            clearInterval(this.state.interval);\n            //setting state for flag.\n            this.setState({flag: 0})\n            //setting state for lapse.\n            this.setState({lap: this.state.lap + 1});\n            //displaying lapse on browser.\n            document.getElementById(\"lapseInfo\").innerHTML += \"lap\" + this.state.lap + \": \" +  this.state.countMin + \":\" + this.state.countSec + \":\" + + this.state.countMSec + \"<br>\"; \n        }\n    }\n//clear lapse function.\nclearLap = () => {\n    //Clearign lapse lapse on browser.\n    document.getElementById(\"lapseInfo\").innerHTML = \"\";\n    //setting state lapse.\n    this.setState({lap: 1});    \n}\n}\nexport default Intervals;"]},"metadata":{},"sourceType":"module"}